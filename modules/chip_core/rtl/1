module gpcfg (  
  // CLOCK AND RESETS ------------------
  input  wire           hclk,              // Clock
  input  wire           hresetn,           // Asynchronous reset
  // AHB-LITE MASTER PORT --------------
  input   wire          hsel,              // AHB transfer: non-sequential only
  input   wire [31:0]   haddr,             // AHB transaction address
  input   wire [ 2:0]   hsize,             // AHB size: byte, half-word or word
  input   wire [31:0]   hwdata,            // AHB write-data
  input   wire          hwrite,            // AHB write control
  output  reg  [31:0]   hrdata,            // AHB read-data
  output  reg           hready,            // AHB stall signal
  output  reg           hresp,             // AHB error response
  output  reg  [31:0]   pad03_ctl_reg,
  output  reg  [31:0]   pad04_ctl_reg,
  output  reg  [31:0]   pad05_ctl_reg,
  output  reg  [31:0]   pad06_ctl_reg,
  output  reg  [31:0]   pad07_ctl_reg,
  output  reg  [31:0]   pad08_ctl_reg,
  output  reg  [31:0]   pad09_ctl_reg,
  output  reg  [31:0]   pad10_ctl_reg,
  output  reg  [31:0]   pad11_ctl_reg,
  output  reg  [31:0]   pad12_ctl_reg,
  output  reg  [31:0]   pad13_ctl_reg,
  output  reg  [31:0]   pad14_ctl_reg,
  output  reg  [31:0]   pad15_ctl_reg,
  output  reg  [31:0]   pad16_ctl_reg,
  output  reg  [31:0]   pad17_ctl_reg,
  output  reg  [31:0]   pad18_ctl_reg,
  output  reg  [31:0]   pad19_ctl_reg,
  output  reg  [31:0]   uartm_baud_ctl_reg,
  output  reg  [31:0]   uartm_ctl_reg,
  output  reg  [31:0]   uarts_baud_ctl_reg,
  output  reg  [31:0]   uarts_ctl_reg,
  output  reg  [31:0]   uarts_tx_data_reg,
  input   wire [31:0]   uarts_rx_data,
  output  reg  [31:0]   uarts_tx_send_reg,
  output  reg  [31:0]   spare0_reg,
  output  reg  [31:0]   spare1_reg,
  output  reg  [31:0]   spare2_reg,
  output  reg  [31:0]   spare3_reg,
  output  reg  [31:0]   signature_reg,
  output  wire [2047:0] arg_a,
  output  wire [2047:0] arg_b,
  output  wire [2047:0] exp,
  output  wire [2047:0] modulus,
  output  wire [11:0]   maxbits,
  output  wire [2047:0] r_red_extgcd,
  output  wire          bypass_vn,
  output  wire          enable_p_mod_mul_il,
  output  wire          enable_p_mod_exp,
  output  wire          enable_p_bin_ext_gcd,
  output  wire          enable_p_rng0,
  output  wire          enable_p_rng1,
  input   wire [2048:0] x,
  input   wire [2047:0] gcd,
  input   wire [2047:0] mod_mul_il_y,
  input   wire [2047:0] mod_exp_y,
  input   wire [1023:0] rng0_y,
  input   wire [1023:0] rng1_y,
  input   wire          done_irq_p_mod_mul_il,
  input   wire          done_irq_p_mod_exp,
  input   wire          done_irq_p_bin_ext_gcd,
  input   wire          done_irq_p_rng0,
  input   wire          done_irq_p_rng1

);

//----------------------------------------------
//localparameter, genva and wire/reg declaration
//----------------------------------------------
  localparam GPCFG0_ADDR   = 16'h0000;  //PAD03_CTL  UARTM_TX  0_0001_0000
  localparam GPCFG1_ADDR   = 16'h0001;  //PAD04_CTL  UARTM_RX  0_0000_0111
  localparam GPCFG2_ADDR   = 16'h0002;  //PAD05_CTL  UARTS_TX  0_0001_0000
  localparam GPCFG3_ADDR   = 16'h0003;  //PAD06_CTL  UARTS_RX  0_0000_0111
  localparam GPCFG4_ADDR   = 16'h0004;  //PAD07_CTL  GPIO0     0_0000_0001
  localparam GPCFG5_ADDR   = 16'h0005;  //PAD08_CTL  GPIO1     0_0000_0001
  localparam GPCFG6_ADDR   = 16'h0006;  //PAD09_CTL  GPIO2     0_0000_0001
  localparam GPCFG7_ADDR   = 16'h0007;  //PAD10_CTL  GPIO3     0_0000_0001
  localparam GPCFG8_ADDR   = 16'h0008;  //PAD11_CTL
  localparam GPCFG9_ADDR   = 16'h0009;  //PAD12_CTL
  localparam GPCFG10_ADDR  = 16'h000A;  //PAD13_CTL
  localparam GPCFG11_ADDR  = 16'h000B;  //PAD14_CTL
  localparam GPCFG12_ADDR  = 16'h000C;  //PAD15_CTL
  localparam GPCFG13_ADDR  = 16'h000D;  //PAD16_CTL
  localparam GPCFG14_ADDR  = 16'h000E;  //PAD17_CTL
  localparam GPCFG15_ADDR  = 16'h000F;  //PAD18_CTL
  localparam GPCFG16_ADDR  = 16'h0010;  //PAD19_CTL

  localparam GPCFG17_ADDR = 16'h0011;  //UARTM_BAUD Reset value for master clock of 25 Mhz and baud rate of 9600
  localparam GPCFG18_ADDR = 16'h0012;  //UARTM_CTL
  localparam GPCFG34_ADDR = 16'h0022;  //UARTS_BAUD Reset value for master clock of 25 Mhz and baud rate of 9600
  localparam GPCFG35_ADDR = 16'h0023;  //UARTS_CTL
  localparam GPCFG36_ADDR = 16'h0024;  //UARTS_TXDATA
  localparam GPCFG37_ADDR = 16'h0025;  //UARTS_RXDATA
  localparam GPCFG38_ADDR = 16'h0026;  //UARTS_TX_SEND
  localparam GPCFG39_ADDR = 16'h0027;  //SPARE0
  localparam GPCFG40_ADDR = 16'h0028;  //SPARE1
  localparam GPCFG41_ADDR = 16'h0029;  //SPARE2
  localparam GPCFG42_ADDR = 16'h002A;  //SPARE3
  localparam GPCFG51_ADDR = 16'h0033;  //SIGNATURE

  localparam GPCFG_CLCTLP_ADDR      = 16'h8000;
  localparam GPCFG_CLCTL_ADDR  = 16'h8004;
  localparam GPCFG_CLSTATUS_ADDR   = 16'h8008;

  parameter [15:0] GPCFG_N_ADDR = '{16'h9000,
                                    16'h9004,
                                    16'h9008,
                                    16'h900C,
                                    16'h9010,
                                    16'h9014,
                                    16'h9018,
                                    16'h901C,
                                    16'h9020,
                                    16'h9024,
                                    16'h9028,
                                    16'h902C,
                                    16'h9030,
                                    16'h9034,
                                    16'h9038,
                                    16'h903C,
                                    16'h9040,
                                    16'h9044,
                                    16'h9048,
                                    16'h904C,
                                    16'h9050,
                                    16'h9054,
                                    16'h9058,
                                    16'h905C,
                                    16'h9060,
                                    16'h9064,
                                    16'h9068,
                                    16'h906C,
                                    16'h9070,
                                    16'h9074,
                                    16'h9078,
                                    16'h907C};

  parameter [15:0] GPCFG_R_ADDR  = '{16'h9080,
                                     16'h9084,
                                     16'h9088,
                                     16'h908C,
                                     16'h9090,
                                     16'h9094,
                                     16'h9098,
                                     16'h909C,
                                     16'h90A0,
                                     16'h90A4,
                                     16'h90A8,
                                     16'h90AC,
                                     16'h90B0,
                                     16'h90B4,
                                     16'h90B8,
                                     16'h90BC,
                                     16'h90C0,
                                     16'h90C4,
                                     16'h90C8,
                                     16'h90CC,
                                     16'h90D0,
                                     16'h90D4,
                                     16'h90D8,
                                     16'h90DC,
                                     16'h90E0,
                                     16'h90E4,
                                     16'h90E8,
                                     16'h90EC,
                                     16'h90F0,
                                     16'h90F4,
                                     16'h90F8,
                                     16'h90FC};

  parameter [15:0]  GPCFG_NSQ_ADDR   = '{16'h9100,
                                         16'h9104,
                                         16'h9108,
                                         16'h910C,
                                         16'h9110,
                                         16'h9114,
                                         16'h9118,
                                         16'h911C,
                                         16'h9120,
                                         16'h9124,
                                         16'h9128,
                                         16'h912C,
                                         16'h9130,
                                         16'h9134,
                                         16'h9138,
                                         16'h913C,
                                         16'h9140,
                                         16'h9144,
                                         16'h9148,
                                         16'h914C,
                                         16'h9150,
                                         16'h9154,
                                         16'h9158,
                                         16'h915C,
                                         16'h9160,
                                         16'h9164,
                                         16'h9168,
                                         16'h916C,
                                         16'h9170,
                                         16'h9174,
                                         16'h9178,
                                         16'h917C,
                                         16'h9180,
                                         16'h9184,
                                         16'h9188,
                                         16'h918C,
                                         16'h9190,
                                         16'h9194,
                                         16'h9198,
                                         16'h919C,
                                         16'h91A0,
                                         16'h91A4,
                                         16'h91A8,
                                         16'h91AC,
                                         16'h91B0,
                                         16'h91B4,
                                         16'h91B8,
                                         16'h91BC,
                                         16'h91C0,
                                         16'h91C4,
                                         16'h91C8,
                                         16'h91CC,
                                         16'h91D0,
                                         16'h91D4,
                                         16'h91D8,
                                         16'h91DC,
                                         16'h91E0,
                                         16'h91E4,
                                         16'h91E8,
                                         16'h91EC,
                                         16'h91F0,
                                         16'h91F4,
                                         16'h91F8,
                                         16'h91FC};

  parameter [15:0]  GPCFG_FKF_ADDR   = '{16'h9200,
                                         16'h9204,
                                         16'h9208,
                                         16'h920C,
                                         16'h9210,
                                         16'h9214,
                                         16'h9218,
                                         16'h921C,
                                         16'h9220,
                                         16'h9224,
                                         16'h9228,
                                         16'h922C,
                                         16'h9230,
                                         16'h9234,
                                         16'h9238,
                                         16'h923C,
                                         16'h9240,
                                         16'h9244,
                                         16'h9248,
                                         16'h924C,
                                         16'h9250,
                                         16'h9254,
                                         16'h9258,
                                         16'h925C,
                                         16'h9260,
                                         16'h9264,
                                         16'h9268,
                                         16'h926C,
                                         16'h9270,
                                         16'h9274,
                                         16'h9278,
                                         16'h927C,
                                         16'h9280,
                                         16'h9284,
                                         16'h9288,
                                         16'h928C,
                                         16'h9290,
                                         16'h9294,
                                         16'h9298,
                                         16'h929C,
                                         16'h92A0,
                                         16'h92A4,
                                         16'h92A8,
                                         16'h92AC,
                                         16'h92B0,
                                         16'h92B4,
                                         16'h92B8,
                                         16'h92BC,
                                         16'h92C0,
                                         16'h92C4,
                                         16'h92C8,
                                         16'h92CC,
                                         16'h92D0,
                                         16'h92D4,
                                         16'h92D8,
                                         16'h92DC,
                                         16'h92E0,
                                         16'h92E4,
                                         16'h92E8,
                                         16'h92EC,
                                         16'h92F0,
                                         16'h92F4,
                                         16'h92F8,
                                         16'h92FC};

  parameter [15:0]  GPCFG_ARGA_ADDR   = '{16'h9300,
                                          16'h9304,
                                          16'h9308,
                                          16'h930C,
                                          16'h9310,
                                          16'h9314,
                                          16'h9318,
                                          16'h931C,
                                          16'h9320,
                                          16'h9324,
                                          16'h9328,
                                          16'h932C,
                                          16'h9330,
                                          16'h9334,
                                          16'h9338,
                                          16'h933C,
                                          16'h9340,
                                          16'h9344,
                                          16'h9348,
                                          16'h934C,
                                          16'h9350,
                                          16'h9354,
                                          16'h9358,
                                          16'h935C,
                                          16'h9360,
                                          16'h9364,
                                          16'h9368,
                                          16'h936C,
                                          16'h9370,
                                          16'h9374,
                                          16'h9378,
                                          16'h937C,
                                          16'h9380,
                                          16'h9384,
                                          16'h9388,
                                          16'h938C,
                                          16'h9390,
                                          16'h9394,
                                          16'h9398,
                                          16'h939C,
                                          16'h93A0,
                                          16'h93A4,
                                          16'h93A8,
                                          16'h93AC,
                                          16'h93B0,
                                          16'h93B4,
                                          16'h93B8,
                                          16'h93BC,
                                          16'h93C0,
                                          16'h93C4,
                                          16'h93C8,
                                          16'h93CC,
                                          16'h93D0,
                                          16'h93D4,
                                          16'h93D8,
                                          16'h93DC,
                                          16'h93E0,
                                          16'h93E4,
                                          16'h93E8,
                                          16'h93EC,
                                          16'h93F0,
                                          16'h93F4,
                                          16'h93F8,
                                          16'h93FC};

  parameter [15:0]  GPCFG_ARGB_ADDR   = '{16'h9400,
                                          16'h9404,
                                          16'h9408,
                                          16'h940C,
                                          16'h9410,
                                          16'h9414,
                                          16'h9418,
                                          16'h941C,
                                          16'h9420,
                                          16'h9424,
                                          16'h9428,
                                          16'h942C,
                                          16'h9430,
                                          16'h9434,
                                          16'h9438,
                                          16'h943C,
                                          16'h9440,
                                          16'h9444,
                                          16'h9448,
                                          16'h944C,
                                          16'h9450,
                                          16'h9454,
                                          16'h9458,
                                          16'h945C,
                                          16'h9460,
                                          16'h9464,
                                          16'h9468,
                                          16'h946C,
                                          16'h9470,
                                          16'h9474,
                                          16'h9478,
                                          16'h947C,
                                          16'h9480,
                                          16'h9484,
                                          16'h9488,
                                          16'h948C,
                                          16'h9490,
                                          16'h9494,
                                          16'h9498,
                                          16'h949C,
                                          16'h94A0,
                                          16'h94A4,
                                          16'h94A8,
                                          16'h94AC,
                                          16'h94B0,
                                          16'h94B4,
                                          16'h94B8,
                                          16'h94BC,
                                          16'h94C0,
                                          16'h94C4,
                                          16'h94C8,
                                          16'h94CC,
                                          16'h94D0,
                                          16'h94D4,
                                          16'h94D8,
                                          16'h94DC,
                                          16'h94E0,
                                          16'h94E4,
                                          16'h94E8,
                                          16'h94EC,
                                          16'h94F0,
                                          16'h94F4,
                                          16'h94F8,
                                          16'h94FC};

  parameter [15:0]  GPCFG_ARGC_ADDR   = '{16'h9500,
                                          16'h9504,
                                          16'h9508,
                                          16'h950C,
                                          16'h9510,
                                          16'h9514,
                                          16'h9518,
                                          16'h951C,
                                          16'h9520,
                                          16'h9524,
                                          16'h9528,
                                          16'h952C,
                                          16'h9530,
                                          16'h9534,
                                          16'h9538,
                                          16'h953C,
                                          16'h9540,
                                          16'h9544,
                                          16'h9548,
                                          16'h954C,
                                          16'h9550,
                                          16'h9554,
                                          16'h9558,
                                          16'h955C,
                                          16'h9560,
                                          16'h9564,
                                          16'h9568,
                                          16'h956C,
                                          16'h9570,
                                          16'h9574,
                                          16'h9578,
                                          16'h957C,
                                          16'h9580,
                                          16'h9584,
                                          16'h9588,
                                          16'h958C,
                                          16'h9590,
                                          16'h9594,
                                          16'h9598,
                                          16'h959C,
                                          16'h95A0,
                                          16'h95A4,
                                          16'h95A8,
                                          16'h95AC,
                                          16'h95B0,
                                          16'h95B4,
                                          16'h95B8,
                                          16'h95BC,
                                          16'h95C0,
                                          16'h95C4,
                                          16'h95C8,
                                          16'h95CC,
                                          16'h95D0,
                                          16'h95D4,
                                          16'h95D8,
                                          16'h95DC,
                                          16'h95E0,
                                          16'h95E4,
                                          16'h95E8,
                                          16'h95EC,
                                          16'h95F0,
                                          16'h95F4,
                                          16'h95F8,
                                          16'h95FC};
  
  parameter [15:0]  GPCFG_RAND0_ADDR   = '{16'h9600,
                                           16'h9604,
                                           16'h9608,
                                           16'h960C,
                                           16'h9610,
                                           16'h9614,
                                           16'h9618,
                                           16'h961C,
                                           16'h9620,
                                           16'h9624,
                                           16'h9628,
                                           16'h962C,
                                           16'h9630,
                                           16'h9634,
                                           16'h9638,
                                           16'h963C,
                                           16'h9640,
                                           16'h9644,
                                           16'h9648,
                                           16'h964C,
                                           16'h9650,
                                           16'h9654,
                                           16'h9658,
                                           16'h965C,
                                           16'h9660,
                                           16'h9664,
                                           16'h9668,
                                           16'h966C,
                                           16'h9670,
                                           16'h9674,
                                           16'h9678,
                                           16'h967C};

  parameter [15:0]  GPCFG_RAND1_ADDR       = '{16'h9680,
                                               16'h9684,
                                               16'h9688,
                                               16'h968C,
                                               16'h9690,
                                               16'h9694,
                                               16'h9698,
                                               16'h969C,
                                               16'h96A0,
                                               16'h96A4,
                                               16'h96A8,
                                               16'h96AC,
                                               16'h96B0,
                                               16'h96B4,
                                               16'h96B8,
                                               16'h96BC,
                                               16'h96C0,
                                               16'h96C4,
                                               16'h96C8,
                                               16'h96CC,
                                               16'h96D0,
                                               16'h96D4,
                                               16'h96D8,
                                               16'h96DC,
                                               16'h96E0,
                                               16'h96E4,
                                               16'h96E8,
                                               16'h96EC,
                                               16'h96F0,
                                               16'h96F4,
                                               16'h96F8,
                                           16'h96FC};

  localparam GPCFG_PC_ADDR0  = 16'h970     ;
  localparam GPCFG_PC_ADDR1  = 16'h970     ;
  localparam GPCFG_PC_ADDR2  = 16'h970     ;
  localparam GPCFG_PC_ADDR3  = 16'h970     ;
  localparam GPCFG_PC_ADDR4  = 16'h971     ;
  localparam GPCFG_PC_ADDR5  = 16'h971     ;
  localparam GPCFG_PC_ADDR6  = 16'h971     ;
  localparam GPCFG_PC_ADDR7  = 16'h971     ;
  localparam GPCFG_PC_ADDR8  = 16'h972     ;
  localparam GPCFG_PC_ADDR9  = 16'h972     ;
  localparam GPCFG_PC_ADDR10 = 16'h972     ;
  localparam GPCFG_PC_ADDR11 = 16'h972     ;
  localparam GPCFG_PC_ADDR12 = 16'h973     ;
  localparam GPCFG_PC_ADDR13 = 16'h973     ;
  localparam GPCFG_PC_ADDR14 = 16'h973     ;
  localparam GPCFG_PC_ADDR15 = 16'h973     ;
  localparam GPCFG_PC_ADDR16 = 16'h974     ;
  localparam GPCFG_PC_ADDR17 = 16'h974     ;
  localparam GPCFG_PC_ADDR18 = 16'h974     ;
  localparam GPCFG_PC_ADDR19 = 16'h974     ;
  localparam GPCFG_PC_ADDR20 = 16'h975     ;
  localparam GPCFG_PC_ADDR21 = 16'h975     ;
  localparam GPCFG_PC_ADDR22 = 16'h975     ;
  localparam GPCFG_PC_ADDR23 = 16'h975     ;
  localparam GPCFG_PC_ADDR24 = 16'h976     ;
  localparam GPCFG_PC_ADDR25 = 16'h976     ;
  localparam GPCFG_PC_ADDR26 = 16'h976     ;
  localparam GPCFG_PC_ADDR27 = 16'h976     ;
  localparam GPCFG_PC_ADDR28 = 16'h977     ;
  localparam GPCFG_PC_ADDR29 = 16'h977     ;
  localparam GPCFG_PC_ADDR30 = 16'h977     ;
  localparam GPCFG_PC_ADDR31 = 16'h977C;
  localparam GPCFG_PC_ADDR32 = 16'h9780;
  localparam GPCFG_PC_ADDR33 = 16'h9784;
  localparam GPCFG_PC_ADDR34 = 16'h9788;
  localparam GPCFG_PC_ADDR35 = 16'h978C;
  localparam GPCFG_PC_ADDR36 = 16'h9790;
  localparam GPCFG_PC_ADDR37 = 16'h9794;
  localparam GPCFG_PC_ADDR38 = 16'h9798;
  localparam GPCFG_PC_ADDR39 = 16'h979C;
  localparam GPCFG_PC_ADDR40 = 16'h97A0;
  localparam GPCFG_PC_ADDR41 = 16'h97A4;
  localparam GPCFG_PC_ADDR42 = 16'h97A8;
  localparam GPCFG_PC_ADDR43 = 16'h97AC;
  localparam GPCFG_PC_ADDR44 = 16'h97B0;
  localparam GPCFG_PC_ADDR45 = 16'h97B4;
  localparam GPCFG_PC_ADDR46 = 16'h97B8;
  localparam GPCFG_PC_ADDR47 = 16'h97BC;
  localparam GPCFG_PC_ADDR48 = 16'h97C0;
  localparam GPCFG_PC_ADDR49 = 16'h97C4;
  localparam GPCFG_PC_ADDR50 = 16'h97C8;
  localparam GPCFG_PC_ADDR51 = 16'h97CC;
  localparam GPCFG_PC_ADDR52 = 16'h97D0;
  localparam GPCFG_PC_ADDR53 = 16'h97D4;
  localparam GPCFG_PC_ADDR54 = 16'h97D8;
  localparam GPCFG_PC_ADDR55 = 16'h97DC;
  localparam GPCFG_PC_ADDR56 = 16'h97E0;
  localparam GPCFG_PC_ADDR57 = 16'h97E4;
  localparam GPCFG_PC_ADDR58 = 16'h97E8;
  localparam GPCFG_PC_ADDR59 = 16'h97EC;
  localparam GPCFG_PC_ADDR60 = 16'h97F0;
  localparam GPCFG_PC_ADDR61 = 16'h97F4;
  localparam GPCFG_PC_ADDR62 = 16'h97F8;
  localparam GPCFG_PC_ADDR63 = 16'h97FC;

  parameter [15:0]  GPCFG_MUL_ADDR   = '{16'h9800,
                                         16'h9804,
                                         16'h9808,
                                         16'h980C,
                                         16'h9810,
                                         16'h9814,
                                         16'h9818,
                                         16'h981C,
                                         16'h9820,
                                         16'h9824,
                                         16'h9828,
                                         16'h982C,
                                         16'h9830,
                                         16'h9834,
                                         16'h9838,
                                         16'h983C,
                                         16'h9840,
                                         16'h9844,
                                         16'h9848,
                                         16'h984C,
                                         16'h9850,
                                         16'h9854,
                                         16'h9858,
                                         16'h985C,
                                         16'h9860,
                                         16'h9864,
                                         16'h9868,
                                         16'h986C,
                                         16'h9870,
                                         16'h9874,
                                         16'h9878,
                                         16'h987C,
                                         16'h9880,
                                         16'h9884,
                                         16'h9888,
                                         16'h988C,
                                         16'h9890,
                                         16'h9894,
                                         16'h9898,
                                         16'h989C,
                                         16'h98A0,
                                         16'h98A4,
                                         16'h98A8,
                                         16'h98AC,
                                         16'h98B0,
                                         16'h98B4,
                                         16'h98B8,
                                         16'h98BC,
                                         16'h98C0,
                                         16'h98C4,
                                         16'h98C8,
                                         16'h98CC,
                                         16'h98D0,
                                         16'h98D4,
                                         16'h98D8,
                                         16'h98DC,
                                         16'h98E0,
                                         16'h98E4,
                                         16'h98E8,
                                         16'h98EC,
                                         16'h98F0,
                                         16'h98F4,
                                         16'h98F8,
                                         16'h98FC};

  parameter [15:0]  GPCFG_EXP_ADDR   = '{16'h9900,
                                         16'h9904,
                                         16'h9908,
                                         16'h990C,
                                         16'h9910,
                                         16'h9914,
                                         16'h9918,
                                         16'h991C,
                                         16'h9920,
                                         16'h9924,
                                         16'h9928,
                                         16'h992C,
                                         16'h9930,
                                         16'h9934,
                                         16'h9938,
                                         16'h993C,
                                         16'h9940,
                                         16'h9944,
                                         16'h9948,
                                         16'h994C,
                                         16'h9950,
                                         16'h9954,
                                         16'h9958,
                                         16'h995C,
                                         16'h9960,
                                         16'h9964,
                                         16'h9968,
                                         16'h996C,
                                         16'h9970,
                                         16'h9974,
                                         16'h9978,
                                         16'h997C,
                                         16'h9980,
                                         16'h9984,
                                         16'h9988,
                                         16'h998C,
                                         16'h9990,
                                         16'h9994,
                                         16'h9998,
                                         16'h999C,
                                         16'h99A0,
                                         16'h99A4,
                                         16'h99A8,
                                         16'h99AC,
                                         16'h99B0,
                                         16'h99B4,
                                         16'h99B8,
                                         16'h99BC,
                                         16'h99C0,
                                         16'h99C4,
                                         16'h99C8,
                                         16'h99CC,
                                         16'h99D0,
                                         16'h99D4,
                                         16'h99D8,
                                         16'h99DC,
                                         16'h99E0,
                                         16'h99E4,
                                         16'h99E8,
                                         16'h99EC,
                                         16'h99F0,
                                         16'h99F4,
                                         16'h99F8,
                                         16'h99FC};

  parameter [15:0]  GPCFG_INV_ADDR   = '{16'h9A00,
                                         16'h9A04,
                                         16'h9A08,
                                         16'h9A0C,
                                         16'h9A10,
                                         16'h9A14,
                                         16'h9A18,
                                         16'h9A1C,
                                         16'h9A20,
                                         16'h9A24,
                                         16'h9A28,
                                         16'h9A2C,
                                         16'h9A30,
                                         16'h9A34,
                                         16'h9A38,
                                         16'h9A3C,
                                         16'h9A40,
                                         16'h9A44,
                                         16'h9A48,
                                         16'h9A4C,
                                         16'h9A50,
                                         16'h9A54,
                                         16'h9A58,
                                         16'h9A5C,
                                         16'h9A60,
                                         16'h9A64,
                                         16'h9A68,
                                         16'h9A6C,
                                         16'h9A70,
                                         16'h9A74,
                                         16'h9A78,
                                         16'h9A7C,
                                         16'h9A80,
                                         16'h9A84,
                                         16'h9A88,
                                         16'h9A8C,
                                         16'h9A90,
                                         16'h9A94,
                                         16'h9A98,
                                         16'h9A9C,
                                         16'h9AA0,
                                         16'h9AA4,
                                         16'h9AA8,
                                         16'h9AAC,
                                         16'h9AB0,
                                         16'h9AB4,
                                         16'h9AB8,
                                         16'h9ABC,
                                         16'h9AC0,
                                         16'h9AC4,
                                         16'h9AC8,
                                         16'h9ACC,
                                         16'h9AD0,
                                         16'h9AD4,
                                         16'h9AD8,
                                         16'h9ADC,
                                         16'h9AE0,
                                         16'h9AE4,
                                         16'h9AE8,
                                         16'h9AEC,
                                         16'h9AF0,
                                         16'h9AF4,
                                         16'h9AF8,
                                         16'h9AFC};


  reg [31:0] read_data;


  reg [31:0] haddr_lat;
  reg        valid_wr_lat;
  reg        dec_err;

  reg [3:0]  wbyte_en;
  reg [3:0]  wbyte_en_lat;

  reg  [31:0] cleq_ctl_p_reg;
  reg  [31:0] cleq_ctl_reg;

  reg  [1023:0] cleq_n_reg;
  reg  [2047:0] cleq_nsq_reg;
  reg  [2047:0] gpcfg_fkf_reg;

  wire  [1023:0] n_loc;
  wire  [2047:0] nsq_loc;
  wire  [2047:0] fkf_loc;

  reg  [1023:0] cleq_rand_reg;

  reg  [2047:0] cleq_arga_reg;
  reg  [2047:0] cleq_argb_reg;
  reg  [2047:0] cleq_argc_reg;
  reg  [2047:0] cleq_pc_reg;

  reg  [1023:0] gpcfg_rand0_reg;
  reg  [1023:0] gpcfg_rand1_reg;

  reg  [2047:0] mod_inv;
  reg  [1024:0] cleq_rand0_hw;
  reg  [1024:0] cleq_rand1_hw;
  reg           cl_busy; 
  reg           cl_inverr; 

  wire [1023:0] n; 
  wire [2047:0] nsq; 
  wire [2048:0] r_egcd; 


  parameter NUM_RDATA = 640;
  reg [31:0] rdata [0: NUM_RDATA];
//--------------------------
//Identify valid transaction
//--------------------------
  assign valid_wr = hsel &  hwrite & hready & ~dec_err;
  assign valid_rd = hsel & ~hwrite & hready & ~dec_err;

//--------------------------
//Capture write address
//--------------------------

  always @(posedge hclk or negedge hresetn) begin 
    if (hresetn == 1'b0) begin
      haddr_lat    <= 32'b0;
      wbyte_en_lat <= 3'b0;
    end
    else if (valid_wr == 1'b1) begin
      haddr_lat    <= haddr;
      wbyte_en_lat <= wbyte_en;
    end
  end

  always @(posedge hclk or negedge hresetn) begin 
    if (hresetn == 1'b0) begin
      valid_wr_lat <= 1'b0;
    end
    else begin
      valid_wr_lat <= valid_wr;
    end
  end


//----------------------------
// Logic for getting read data
//----------------------------
gpcfg_rd_wr #( .RESET_VAL (32'h16), .CFG_ADDR (GPCFG0_ADDR)) u_cfg_pad03_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad03_ctl_reg), .rdata (rdata[0]));


gpcfg_rd_wr #( .RESET_VAL (32'h17), .CFG_ADDR (GPCFG1_ADDR)) u_cfg_pad04_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad04_ctl_reg), .rdata (rdata[1]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_0017), .CFG_ADDR (GPCFG2_ADDR)) u_cfg_pad05_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad05_ctl_reg), .rdata (rdata[2]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_0017), .CFG_ADDR (GPCFG3_ADDR)) u_cfg_pad06_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad06_ctl_reg), .rdata (rdata[3]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG4_ADDR)) u_cfg_pad07_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad07_ctl_reg), .rdata (rdata[4]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG5_ADDR)) u_cfg_pad08_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad08_ctl_reg), .rdata (rdata[5]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG6_ADDR)) u_cfg_pad09_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad09_ctl_reg), .rdata (rdata[6]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG7_ADDR)) u_cfg_pad10_ctl_reg_inst (
  .hclk    (hclk),           .hresetn (hresetn),
  .wr_en   (valid_wr_lat),   .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),   .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad10_ctl_reg), .rdata (rdata[7]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG8_ADDR)) u_cfg_pad11_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad11_ctl_reg), .rdata (rdata[8]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG9_ADDR)) u_cfg_pad12_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad12_ctl_reg), .rdata (rdata[9]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG10_ADDR)) u_cfg_pad13_ctl_reg_inst (
  .hclk    (hclk),           .hresetn (hresetn),
  .wr_en   (valid_wr_lat),   .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),   .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),    .wdata (hwdata),
  .wr_reg  (pad13_ctl_reg),  .rdata (rdata[10]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG11_ADDR)) u_cfg_pad14_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad14_ctl_reg), .rdata (rdata[11]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG12_ADDR)) u_cfg_pad15_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad15_ctl_reg), .rdata (rdata[12]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG13_ADDR)) u_cfg_pad16_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad16_ctl_reg), .rdata (rdata[13]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG14_ADDR)) u_cfg_pad17_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad17_ctl_reg), .rdata (rdata[14]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG15_ADDR)) u_cfg_pad18_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad18_ctl_reg), .rdata (rdata[15]));


gpcfg_rd_wr #( .RESET_VAL (32'h10_001B), .CFG_ADDR (GPCFG16_ADDR)) u_cfg_pad19_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (pad19_ctl_reg), .rdata (rdata[16]));


gpcfg_rd_wr #( .RESET_VAL (32'd2500), .CFG_ADDR (GPCFG17_ADDR)) u_cfg_uartm_baud_ctl_reg_inst (
  .hclk    (hclk),               .hresetn (hresetn),
  .wr_en   (valid_wr_lat),       .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),       .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),        .wdata (hwdata),
  .wr_reg  (uartm_baud_ctl_reg), .rdata (rdata[17]));


gpcfg_rd_wr #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG18_ADDR)) u_cfg_uartm_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (uartm_ctl_reg), .rdata (rdata[18]));


gpcfg_rd_wr #( .RESET_VAL (32'h9C4), .CFG_ADDR (GPCFG34_ADDR)) u_cfg_uarts_baud_ctl_reg_inst (
  .hclk    (hclk),               .hresetn (hresetn),
  .wr_en   (valid_wr_lat),       .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),       .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),        .wdata (hwdata),
  .wr_reg  (uarts_baud_ctl_reg), .rdata (rdata[19]));


gpcfg_rd_wr #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG35_ADDR)) u_cfg_uarts_ctl_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (valid_wr_lat),  .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (uarts_ctl_reg), .rdata (rdata[20]));


gpcfg_rd_wr #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG36_ADDR)) u_cfg_uarts_tx_data_reg_inst (
  .hclk    (hclk),              .hresetn (hresetn),
  .wr_en   (valid_wr_lat),      .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),      .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),       .wdata (hwdata),
  .wr_reg  (uarts_tx_data_reg), .rdata (rdata[21]));


gpcfg_rd_wr_p #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG38_ADDR)) u_cfg_uarts_tx_send_reg_inst (
  .hclk    (hclk),              .hresetn (hresetn),
  .wr_en   (valid_wr_lat),      .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),      .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),       .wdata (hwdata),
  .wr_reg  (uarts_tx_send_reg), .rdata (rdata[22]));


gpcfg_rd_wr #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG39_ADDR)) u_cfg_spare0_reg_inst (
  .hclk    (hclk),         .hresetn (hresetn),
  .wr_en   (valid_wr_lat), .rd_en (valid_rd),
  .byte_en (wbyte_en_lat), .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),  .wdata (hwdata),
  .wr_reg  (spare0_reg),   .rdata (rdata[23]));


gpcfg_rd_wr #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG40_ADDR)) u_cfg_spare1_reg_inst (
  .hclk    (hclk),         .hresetn (hresetn),
  .wr_en   (valid_wr_lat), .rd_en (valid_rd),
  .byte_en (wbyte_en_lat), .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),  .wdata (hwdata),
  .wr_reg  (spare1_reg),   .rdata (rdata[24]));


gpcfg_rd_wr #( .RESET_VAL (32'hFFFF_FFFF), .CFG_ADDR (GPCFG41_ADDR)) u_cfg_spare2_reg_inst (
  .hclk    (hclk),         .hresetn (hresetn),
  .wr_en   (valid_wr_lat), .rd_en (valid_rd),
  .byte_en (wbyte_en_lat), .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),  .wdata (hwdata),
  .wr_reg  (spare2_reg),   .rdata (rdata[25]));


gpcfg_rd_wr #( .RESET_VAL (32'hFFFF_FFFF), .CFG_ADDR (GPCFG42_ADDR)) u_cfg_spare3_reg_inst (
  .hclk    (hclk),         .hresetn (hresetn),
  .wr_en   (valid_wr_lat), .rd_en (valid_rd),
  .byte_en (wbyte_en_lat), .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),  .wdata (hwdata),
  .wr_reg  (spare3_reg),   .rdata (rdata[26]));


gpcfg_rd_wr #( .RESET_VAL (32'h0CC5_0101), .CFG_ADDR (GPCFG51_ADDR)) u_cfg_signature_reg_inst (
  .hclk    (hclk),          .hresetn (hresetn),
  .wr_en   (1'b0),          .rd_en (valid_rd),
  .byte_en (wbyte_en_lat),  .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),   .wdata (hwdata),
  .wr_reg  (signature_reg), .rdata (rdata[27]));


gpcfg_rd_wr_p #( .RESET_VAL (32'h0), .CFG_ADDR (GPCFG_CLCTLP_ADDR)) u_cfg_cleq_ctl_p_reg_inst (
  .hclk    (hclk),         .hresetn (hresetn),
  .wr_en   (valid_wr_lat), .rd_en (valid_rd),
  .byte_en (wbyte_en_lat), .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),  .wdata (hwdata),
  .wr_reg  (cleq_ctl_p_reg), .rdata (rdata[28]));


gpcfg_rd_wr #( .RESET_VAL (32'h7FF), .CFG_ADDR (GPCFG_CLCTL_ADDR)) u_cfg_cleq_maxbits_reg_inst (
  .hclk    (hclk),             .hresetn (hresetn),
  .wr_en   (valid_wr_lat),     .rd_en   (valid_rd),
  .byte_en (wbyte_en_lat),     .wr_addr (haddr_lat[17:2]),
  .rd_addr (haddr[17:2]),      .wdata   (hwdata),
  .wr_reg  (cleq_ctl_reg),     .rdata   (rdata[29]));

genvar i;

generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_n_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_N_ADDR[i])) u_cfg_cleq_n_reg_inst (
      .hclk    (hclk),                     .hresetn (hresetn),
      .wr_en   (valid_wr_lat),             .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),             .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),              .wdata   (hwdata),
      .wr_reg  (cleq_n_reg[31+32*i:32*i]), .rdata   (rdata[30+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_rand_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_R_ADDR[i])) u_cfg_cleq_rand_reg_inst (
      .hclk    (hclk),                        .hresetn (hresetn),
      .wr_en   (valid_wr_lat),                .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),                .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),                 .wdata   (hwdata),
      .wr_reg  (cleq_rand_reg[31+32*i:32*i]), .rdata   (rdata[62+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_nsq_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_NSQ_ADDR[i])) u_cfg_cleq_nsq_reg_inst (
      .hclk    (hclk),                      .hresetn (hresetn),
      .wr_en   (valid_wr_lat),              .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),              .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),               .wdata   (hwdata),
      .wr_reg  (cleq_nsq_reg[31+32*i:32*i]), .rdata   (rdata[94+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_fkf_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_FKF_ADDR[i])) u_cfg_gpcfg_fkf_reg_inst (
      .hclk    (hclk),                       .hresetn (hresetn),
      .wr_en   (valid_wr_lat),               .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),               .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),                .wdata   (hwdata),
      .wr_reg  (gpcfg_fkf_reg[31+32*i:32*i]), .rdata   (rdata[158+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_arga_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_ARGA_ADDR[i])) u_cfg_cleq_arga_reg_inst (
      .hclk    (hclk),                       .hresetn (hresetn),
      .wr_en   (valid_wr_lat),               .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),               .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),                .wdata   (hwdata),
      .wr_reg  (cleq_arga_reg[31+32*i:32*i]), .rdata   (rdata[222+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_argb_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_ARGB_ADDR[i])) u_cfg_cleq_argb_reg_inst (
      .hclk    (hclk),                       .hresetn (hresetn),
      .wr_en   (valid_wr_lat),               .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),               .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),                .wdata   (hwdata),
      .wr_reg  (cleq_argb_reg[31+32*i:32*i]), .rdata   (rdata[286+1+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_argc_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_ARGC_ADDR[i])) u_cfg_cleq_argc_reg_inst (
      .hclk    (hclk),                       .hresetn (hresetn),
      .wr_en   (valid_wr_lat),               .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),               .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),                .wdata   (hwdata),
      .wr_reg  (cleq_argc_reg[31+32*i:32*i]), .rdata   (rdata[350+1+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_rand0_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_RAND0_ADDR[i])) u_cfg_gpcfg_t_reg_inst (
      .hclk    (hclk),                          .hresetn (hresetn),
      .wr_en   (valid_wr_lat),                  .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),                  .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),                   .wdata   (hwdata),
      .wr_reg  (gpcfg_rand0_reg[31+32*i:32*i]), .rdata   (rdata[382+1+i]));
  end
endgenerate


generate
  for (i =0; i < 32; i =i +1) begin : cfg_cleq_rand1_gen
    gpcfg_rd_wr #( .RESET_VAL (32'd0), .CFG_ADDR (GPCFG_RAND1_ADDR[i])) u_cfg_gpcfg_s_reg_inst (
      .hclk    (hclk),                     .hresetn (hresetn),
      .wr_en   (valid_wr_lat),             .rd_en   (valid_rd),
      .byte_en (wbyte_en_lat),             .wr_addr (haddr_lat[17:2]),
      .rd_addr (haddr[17:2]),              .wdata   (hwdata),
      .wr_reg  (gpcfg_rand1_reg[31+32*i:32*i]), .rdata   (rdata[414+1+i]));
  end
endgenerate


//gpcfg_rd_wr #( .RESET_VAL (), .CFG_ADDR ()) u_cfg__inst (
//  .hclk    (hclk),         .hresetn (hresetn),
//  .wr_en   (valid_wr_lat), .rd_en (valid_rd),
//  .byte_en (wbyte_en_lat), .wr_addr (haddr_lat),
//  .rd_addr (haddr),        .wdata (hwdata),
//  .wr_reg (),              .rdata ());

gpcfg_rd #(.CFG_ADDR (GPCFG37_ADDR)) u_gpcfg_rd_uarts_rx_data_inst  (
  .rd_en     (valid_rd),
  .rd_addr   (haddr[17:2]),
  .wdata     (uarts_rx_data),
  .rdata     (rdata[446])
);

gpcfg_rd #(.CFG_ADDR (GPCFG_CLSTATUS_ADDR)) u_gpcfg_rd_cleq_status_inst  (
  .rd_en     (valid_rd),
  .rd_addr   (haddr[17:2]),
  .wdata     ({30'b0, cl_inverr, cl_busy} ),
  .rdata     (rdata[447])
);


generate
  for (i =0; i < 32; i =i +1) begin : cfg_mod_mul_gen
    gpcfg_rd #(.CFG_ADDR (GPCFG_MUL_ADDR[i])) u_gpcfg_rd_cfg_mod_mul_inst  (
      .rd_en     (valid_rd),
      .rd_addr   (haddr[17:2]),
      .wdata     (mod_mul_il_y[31+32*i:32*i]),
      .rdata     (rdata[448+i])
    );
  end
endgenerate

generate
  for (i =0; i < 32; i =i +1) begin : cfg_mod_exp_gen
    gpcfg_rd #(.CFG_ADDR (GPCFG_EXP_ADDR[i])) u_gpcfg_rd_cfg_mod_exp_inst  (
      .rd_en     (valid_rd),
      .rd_addr   (haddr[17:2]),
      .wdata     (mod_exp_y[31+32*i:32*i]),
      .rdata     (rdata[512+i])
    );
  end
endgenerate

generate
  for (i =0; i < 32; i =i +1) begin : cfg_mod_inv_gen
    gpcfg_rd #(.CFG_ADDR (GPCFG_INV_ADDR[i])) u_gpcfg_rd_cfg_mod_inv_inst  (
      .rd_en     (valid_rd),
      .rd_addr   (haddr[17:2]),
      .wdata     (mod_inv_y[31+32*i:32*i]),
      .rdata     (rdata[576+i])
    );
  end
endgenerate

integer j;
always@* begin
  read_data  = 32'b0;
  for (j=0; j<NUM_RDATA; j=j+1) begin
    read_data  = rdata[i] | read_data;
  end
end



     

  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      hrdata  <= 32'b0;
    end
    else if (valid_rd == 1'b1) begin
      hrdata  <= read_data;
    end
    else begin
      hrdata  <= 32'b0;
    end
  end


//----------------------------
// Logic for write byte enable
// hsize
// 0000 - byte
// 0001 - hword
// 0010 - word
//----------------------------
   always @* begin
     if (valid_wr == 1'b1) begin
       if (haddr[1:0] == 2'b00) begin
         case (hsize)
           3'b000 : wbyte_en = 4'b0001;
           3'b001 : wbyte_en = 4'b0011;
           3'b010 : wbyte_en = 4'b1111;
           default: wbyte_en = 4'b0000;
         endcase
       end
       else if((haddr[1:0] == 2'b01)) begin
         case (hsize)
           3'b000 : wbyte_en = 4'b0010;
           default: wbyte_en = 4'b0000;
         endcase
       end
       else if((haddr[1:0] == 2'b10)) begin
         case (hsize)
           3'b000 : wbyte_en = 4'b0100;
           3'b001 : wbyte_en = 4'b1100;
           default: wbyte_en = 4'b0000;
         endcase
       end
       else begin
         case (hsize)
           3'b000 : wbyte_en = 4'b1000;
           default: wbyte_en = 4'b0000;
         endcase
       end
     end
     else begin
       wbyte_en = 4'b0000;
     end
   end

//----------------------------
// Logic for write data
//----------------------------

     //.OEN  (pad_ctl[i][0]),  //Output Enable
     //.REN  (pad_ctl[i][1]),  //RX     Enable
     //.P1   (pad_ctl[i][2]),  //pull settting Z, pull up, pull down Repeater
     //.P2   (pad_ctl[i][3]),  //pull settting
     //.E1   (pad_ctl[i][4]),  //drive strength 2,4,8,12ma
     //.E2   (pad_ctl[i][5]),  //drive strength
     //.SMT  (pad_ctl[i][6]),  //Schmitt trigger
     //.SR   (pad_ctl[i][7]),  //Slew Rate Control
     //.POS  (pad_ctl[i][8]),  //Power on state control, state of pad when VDD goes down
     //
                          //                      OEN       REN        Pull     Drive     Override
     //PAD03_CTL  UARTM_TX 0000_0000_0000_0001_0110, Enabled   Enabled     Pull Up,   4mA,     Disabled
     //PAD04_CTL  UARTM_RX 0000_0000_0000_0001_0111  Disabled  Enabled     Pull Up,   4ma,     Disabled
     //PAD05_CTL  UARTS_TX 0001_0000_0000_0001_0111  Disabled  Enabled     Pull Up,   4mA,     Enabled
     //PAD06_CTL  UARTS_RX 0001_0000_0000_0001_0111  Disabled  Enabled     Pull Up,   4mA,     Enabled
     //PAD07_CTL  GPIO0    0001_0000_0000_0001_1011  Disabled  Enabled     Pull Down, 4mA,     Enabled
     //PAD08_CTL  GPIO1    0001_0000_0000_0001_1011  Disabled  Enabled     Pull Down, 4mA,     Enabled
     //PAD09_CTL  GPIO2    0001_0000_0000_0001_1011  Disabled  Enabled     Pull Down, 4mA,     Enabled
     //PAD10_CTL  GPIO3    0001_0000_0000_0001_1011  Disabled  Enabled     Pull Down, 4mA,     Enabled
     //PAD11_CTL
     //PAD12_CTL
     //PAD13_CTL
     //PAD14_CTL
     //PAD15_CTL
     //PAD16_CTL
     //PAD17_CTL
     //PAD18_CTL
     //PAD19_CTL

//------------------------------------
// Logic to generate hresp and hready
//------------------------------------
   
  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      hready <= 1'b1;
      hresp  <= 1'b0;
    end
    else if (dec_err == 1'b1) begin
      hready <= 1'b0;
      hresp  <= 1'b1;
    end
    else begin
      hready <= 1'b1;
      hresp  <= ~hready;
    end
  end
 

  
  assign n       = cleq_ctl_reg[16] ? 1024'b0 : cleq_n_reg;    //fused value of programmed
  assign nsq     = cleq_ctl_reg[16] ? 2048'b0 : cleq_nsq_reg;  //fused value of programmed

  assign arg_a   = cleq_arga_reg;
  assign arg_b   = cleq_argb_reg;

  assign modulus = cleq_ctl_reg[17] ? nsq : {1024'b0, n};

  assign maxbits      = cleq_ctl_reg[11:0];
  assign r_egcd       = 1'b1 << maxbits;
  assign r_red_extgcd = r_egcd - modulus;

  assign bypass_vn = cleq_ctl_reg[18];

  assign enable_p_mod_mul_il       = cleq_ctl_p_reg[0];
  assign enable_p_mod_exp          = cleq_ctl_p_reg[8];
  assign enable_p_bin_ext_gcd      = cleq_ctl_p_reg[16];
  assign enable_p_rng0             = cleq_ctl_p_reg[24];

  assign exp     = arg_b;  //TODO



  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      cl_busy   <= 1'b0;
    end
    else if (enable_p_mod_mul_il | enable_p_mod_exp | enable_p_bin_ext_gcd) begin
      cl_busy  <= 1'b1;
    end
    else if (done_irq_p_mod_mul_il | done_irq_p_mod_exp | done_irq_p_bin_ext_gcd) begin
      cl_busy  <= 1'b0;
    end
  end

  
  
  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      cl_inverr   <= 1'b0;
    end
    else if (done_irq_p_bin_ext_gcd) begin
      if (gcd == 2048'b1) begin
        cl_inverr   <= 1'b0;
      end
      else begin
        cl_inverr   <= 1'b1;
      end
    end
  end
  
  
  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      mod_inv   <= 2048'b0;
    end
    else if (done_irq_p_bin_ext_gcd) begin
      if (x[2048] == 1'b1) begin  //If negative
        mod_inv   <= x + modulus;   
      end
      else begin
        mod_inv   <= x;
      end
    end
  end
 
  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      cleq_rand0_hw   <= 1024'b0;
    end
    else if (done_irq_p_rng0) begin
      cleq_rand0_hw   <= {rng0_y[1023:1], 1'b1};   
    end
    else if (rng0_curr_state == RNG_REGEN) begin
      cleq_rand0_hw   <= cleq_rand0_hw + 2'b10;
    end
  end
 
  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      cleq_rand1_hw   <= 1024'b0;
    end
    else if (done_irq_p_rng1) begin
      cleq_rand1_hw   <= {rng1_y[1023:1], 1'b1};   
    end
    else if (rng0_curr_state == RNG_REGEN) begin
      cleq_rand1_hw   <= cleq_rand1_hw + 2'b10;
    end
  end



 //Check if random number is co-prime with n
  localparam RNG_IDLE  = 2'b00;
  localparam GCD_CALC  = 2'b01;
  localparam GCD_CHECK = 2'b01;
  localparam RNG_REGEN = 2'b01;
  reg [1:0] rng0_curr_state;
  reg [1:0] rng0_nxt_state;
  reg [1:0] rng1_curr_state;
  reg [1:0] rng1_nxt_state;

  always @* begin
    case (rng0_curr_state)
      RNG_IDLE :  begin
        if (done_irq_p_rng0) begin
          rng0_nxt_state = GCD_CALC;
        end
        else begin
          rng0_nxt_state = RNG_IDLE;
        end
      end
      GCD_CALC :  begin
        if (done_irq_p_bin_ext_gcd) begin
          rng0_nxt_state = GCD_CHECK;
        end
        else begin
          rng0_nxt_state = GCD_CALC;
        end
      end
      GCD_CHECK :  begin
        if (cl_inverr == 1'b1) begin
          rng0_nxt_state = RNG_REGEN;
        end
        else begin
          rng0_nxt_state = RNG_IDLE;
        end
      end
      RNG_REGEN :  begin
        rng0_nxt_state = GCD_CALC;
      end
    endcase
  end
  
  always @* begin
    case (rng1_curr_state)
      RNG_IDLE :  begin
        if (done_irq_p_rng1) begin
          rng1_nxt_state = GCD_CALC;
        end
        else begin
          rng1_nxt_state = RNG_IDLE;
        end
      end
      GCD_CALC :  begin
        if (done_irq_p_bin_ext_gcd) begin
          rng1_nxt_state = GCD_CHECK;
        end
        else begin
          rng1_nxt_state = GCD_CALC;
        end
      end
      GCD_CHECK :  begin
        if (cl_inverr == 1'b1) begin
          rng1_nxt_state = RNG_REGEN;
        end
        else begin
          rng1_nxt_state = RNG_IDLE;
        end
      end
      RNG_REGEN :  begin
        rng1_nxt_state = GCD_CALC;
      end
    endcase
  end
  

  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      enable_p_rng1 = 1'b0;
    end
    else begin
      if ((rng0_curr_state == GCD_CHECK) && (rng0_nxt_state == RNG_IDLE)) begin
        enable_p_rng1 = 1'b1;
      end
      else begin
        enable_p_rng1 = 1'b0;
      end
    end
  end




  always @ (posedge hclk or negedge hresetn) begin
    if (hresetn == 1'b0) begin
      rand_err_gen_cnt = 10'b0;
    end
    else begin
      if (((rng1_curr_state == GCD_CHECK) || (rng1_curr_state == GCD_CHECK)) && cl_inverr) begin
        rand_err_gen_cnt = rand_err_gen_cnt + 1'b1;
      end
      else if ((rng0_nxt_state == RNG_IDLE) || (rng1_nxt_state == RNG_IDLE)) begin
        rand_err_gen_cnt = 10'b0;
      end
    end
  end


endmodule
